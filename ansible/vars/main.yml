# Main Variables File
# Global variables for the entire Ansible project

# Application settings
app_name: "my-application"
app_version: "1.0.0"
app_port: 8080
app_health_check_path: "/health"
app_environment: "production"
app_debug: false
app_log_level: "info"

# Application paths
app_deploy_path: "/opt/{{ app_name }}"
app_data_path: "/var/lib/{{ app_name }}"
app_logs_path: "/var/log/{{ app_name }}"
app_config_path: "/etc/{{ app_name }}"
app_source_path: "/tmp/{{ app_name }}-source"

# Application user and group
app_user: "{{ app_name }}"
app_group: "{{ app_name }}"

# Container settings
container_image_name: "{{ app_name }}"
container_image_tag: "{{ app_version }}"
container_registry: "docker.io"
container_registry_username: "{{ vault_container_registry_username | default('') }}"
container_registry_password: "{{ vault_container_registry_password | default('') }}"

# Docker settings
docker_version: "24.0.7"
docker_compose_version: "2.20.0"
docker_swarm_enabled: no
docker_network_name: "app-network"
docker_network_driver: "bridge"
docker_network_subnet: "172.20.0.0/16"
docker_network_gateway: "172.20.0.1"
docker_storage_path: "/var/lib/docker"
docker_storage_driver: "overlay2"

# Docker health check settings
docker_health_check_interval: "30s"
docker_health_check_timeout: "10s"
docker_health_check_retries: 3

# Docker security settings
docker_security_enabled: yes
docker_apparmor_enabled: yes
docker_selinux_enabled: no
docker_user_namespace_enabled: no

# Docker logging settings
docker_logging_enabled: yes
docker_logging_driver: "json-file"
docker_logging_max_size: "10m"
docker_logging_max_files: 3

# Docker backup settings
docker_backup_enabled: yes
docker_backup_schedule: "0 3 * * *"
docker_backup_path: "/var/backups/docker"

# Docker cleanup settings
docker_cleanup_enabled: yes
docker_cleanup_schedule: "0 4 * * 0"
docker_cleanup_keep_images: 10
docker_cleanup_keep_containers: 5

# Docker monitoring settings
docker_monitoring_enabled: yes
docker_prometheus_enabled: yes
docker_grafana_enabled: yes

# Jenkins settings
jenkins_version: "2.414.3"
jenkins_home: "/var/lib/jenkins"
jenkins_port: 8080
jenkins_admin_user: "admin"
jenkins_admin_password: "{{ vault_jenkins_admin_password | default('admin123') }}"

# Jenkins backup settings
jenkins_backup_enabled: yes
jenkins_backup_schedule: "0 1 * * *"
jenkins_backup_path: "/var/backups/jenkins"

# Jenkins security settings
jenkins_security_enabled: yes
jenkins_csrf_protection: yes
jenkins_script_approval: yes

# Jenkins agents settings
jenkins_agents_enabled: yes
jenkins_agent_port: 50000
jenkins_agent_credentials: "{{ vault_jenkins_agent_credentials | default('') }}"

# Jenkins Docker integration
jenkins_docker_enabled: yes
jenkins_docker_socket: "/var/run/docker.sock"
jenkins_docker_group: "docker"

# Jenkins Git integration
jenkins_git_enabled: yes
jenkins_git_credentials: "{{ vault_jenkins_git_credentials | default('') }}"

# Jenkins notification settings
jenkins_slack_enabled: yes
jenkins_slack_webhook: "{{ vault_jenkins_slack_webhook | default('') }}"
jenkins_email_enabled: yes
jenkins_email_smtp_host: "{{ vault_jenkins_email_smtp_host | default('smtp.gmail.com') }}"
jenkins_email_smtp_port: 587
jenkins_email_username: "{{ vault_jenkins_email_username | default('') }}"
jenkins_email_password: "{{ vault_jenkins_email_password | default('') }}"

# Jenkins pipeline settings
jenkins_pipeline_library: "https://github.com/your-org/jenkins-shared-library.git"
jenkins_pipeline_credentials: "{{ vault_jenkins_pipeline_credentials | default('') }}"

# Jenkins SonarQube integration
jenkins_sonarqube_enabled: yes
jenkins_sonarqube_url: "{{ vault_jenkins_sonarqube_url | default('') }}"
jenkins_sonarqube_token: "{{ vault_jenkins_sonarqube_token | default('') }}"

# Jenkins Kubernetes integration
jenkins_kubernetes_enabled: yes
jenkins_kubernetes_url: "{{ vault_jenkins_kubernetes_url | default('') }}"
jenkins_kubernetes_credentials: "{{ vault_jenkins_kubernetes_credentials | default('') }}"

# Database settings
database_host: "{{ groups['database_servers'][0] | default('localhost') }}"
database_port: 5432
database_name: "{{ app_name }}_db"
database_user: "{{ vault_database_user | default('postgres') }}"
database_password: "{{ vault_database_password | default('password') }}"

# Redis settings
redis_host: "{{ groups['database_servers'][0] | default('localhost') }}"
redis_port: 6379
redis_password: "{{ vault_redis_password | default('') }}"

# Load balancer settings
load_balancer_enabled: yes
load_balancer_algorithm: "round_robin"
load_balancer_health_check: yes

# SSL/TLS settings
ssl_enabled: yes
ssl_cert_path: "/etc/ssl/certs/{{ app_name }}.crt"
ssl_key_path: "/etc/ssl/private/{{ app_name }}.key"
ssl_ca_path: "/etc/ssl/certs/{{ app_name }}_ca.crt"

# Backup settings
app_backup_enabled: yes
app_backup_schedule: "0 2 * * *"
app_backup_path: "/var/backups/{{ app_name }}"

# Monitoring settings
monitoring_enabled: yes
prometheus_enabled: yes
grafana_enabled: yes

# System settings
system_timezone: "UTC"
system_locale: "en_US.UTF-8"
package_manager_update_cache: yes
package_manager_autoremove: yes

# Security settings
security_ssh_port: 22
security_firewall_enabled: yes
security_ufw_enabled: yes

# Logging settings
log_retention_days: 30
log_rotation_enabled: yes

# Network settings
dns_servers:
  - 8.8.8.8
  - 8.8.4.4

# Time synchronization
ntp_enabled: yes
ntp_servers:
  - pool.ntp.org 