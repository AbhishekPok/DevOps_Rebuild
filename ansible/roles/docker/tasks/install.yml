---
# Docker Installation Tasks

- name: Install required packages for Docker
  package:
    name: "{{ item }}"
    state: present
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg
    - lsb-release
    - software-properties-common
  when: ansible_os_family == "Debian"

- name: Install required packages for Docker (RedHat)
  package:
    name: "{{ item }}"
    state: present
  loop:
    - yum-utils
    - device-mapper-persistent-data
    - lvm2
  when: ansible_os_family == "RedHat"

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: ansible_os_family == "Debian"

- name: Add Docker repository (Ubuntu)
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
  when: ansible_os_family == "Debian" and ansible_distribution == "Ubuntu"

- name: Add Docker repository (Debian)
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
  when: ansible_os_family == "Debian" and ansible_distribution == "Debian"

- name: Add Docker repository (RedHat)
  yum_repository:
    name: docker-ce-stable
    description: Docker CE Stable - $basearch
    baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg
    enabled: yes
  when: ansible_os_family == "RedHat"

- name: Install Docker CE
  package:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
  when: ansible_os_family == "Debian"

- name: Install Docker CE (RedHat)
  package:
    name: "{{ item }}"
    state: present
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
  when: ansible_os_family == "RedHat"

- name: Install Docker Compose
  pip:
    name: docker-compose
    version: "{{ docker_compose_version }}"
    state: present

- name: Create docker group
  group:
    name: docker
    state: present

- name: Add user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: Set Docker as installed
  set_fact:
    docker_installed: yes 